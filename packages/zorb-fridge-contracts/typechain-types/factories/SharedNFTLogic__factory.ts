/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SharedNFTLogic,
  SharedNFTLogicInterface,
} from "../SharedNFTLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "unencoded",
        type: "bytes",
      },
    ],
    name: "base64Encode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "animationUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenOfEdition",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "editionSize",
        type: "uint256",
      },
    ],
    name: "createMetadataEdition",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "mediaData",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenOfEdition",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "editionSize",
        type: "uint256",
      },
    ],
    name: "createMetadataJSON",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "json",
        type: "bytes",
      },
    ],
    name: "encodeMetadataJSON",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "numberToString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "animationUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenOfEdition",
        type: "uint256",
      },
    ],
    name: "tokenMediaData",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610cd7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063170dc6601461006757806358464f3014610090578063d01fde8c146100a3578063d5fb1b19146100b6578063df30dba0146100c9578063eb111ab6146100dc575b600080fd5b61007a610075366004610513565b6100ef565b6040516100879190610588565b60405180910390f35b61007a61009e366004610646565b610100565b61007a6100b13660046106df565b61017c565b61007a6100c43660046106df565b6101ad565b61007a6100d7366004610727565b6101b8565b61007a6100ea3660046107e5565b6101f0565b60606100fa826102a9565b92915050565b606080821561013457610112836100ef565b604051602001610122919061086d565b60405160208183030381529060405290505b8661013e856100ef565b82888861014a896100ef565b8c6040516020016101619796959493929190610896565b60405160208183030381529060405291505095945050505050565b6060610187826101ad565b60405160200161019791906109ba565b6040516020818303038152906040529050919050565b60606100fa826103ae565b606060006101c78686866101f0565b905060006101d88989848888610100565b90506101e38161017c565b9998505050505050505050565b825182516060911580159115159082906102075750805b1561024b5785610216856100ef565b86610220876100ef565b60405160200161023394939291906109ff565b604051602081830303815290604052925050506102a2565b811561026c578561025b856100ef565b604051602001610233929190610aba565b801561028d578461027c856100ef565b604051602001610233929190610b20565b60405180602001604052806000815250925050505b9392505050565b6060816102cd5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156102f757806102e181610ba4565b91506102f09050600a83610bd5565b91506102d1565b6000816001600160401b038111156103115761031161059b565b6040519080825280601f01601f19166020018201604052801561033b576020820181803683370190505b5090505b84156103a657610350600183610be9565b915061035d600a86610c00565b610368906030610c14565b60f81b81838151811061037d5761037d610c2c565b60200101906001600160f81b031916908160001a90535061039f600a86610bd5565b945061033f565b949350505050565b60608151600014156103ce57505060408051602081019091526000815290565b6000604051806060016040528060408152602001610c6260409139905060006003845160026103fd9190610c14565b6104079190610bd5565b610412906004610c42565b90506000610421826020610c14565b6001600160401b038111156104385761043861059b565b6040519080825280601f01601f191660200182016040528015610462576020820181803683370190505b509050818152600183018586518101602084015b818310156104ce576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610476565b6003895106600181146104e857600281146104f957610505565b613d3d60f01b600119830152610505565b603d60f81b6000198301525b509398975050505050505050565b60006020828403121561052557600080fd5b5035919050565b60005b8381101561054757818101518382015260200161052f565b83811115610556576000848401525b50505050565b6000815180845261057481602086016020860161052c565b601f01601f19169290920160200192915050565b6020815260006102a2602083018461055c565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b03808411156105cb576105cb61059b565b604051601f8501601f19908116603f011681019082821181831017156105f3576105f361059b565b8160405280935085815286868601111561060c57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261063757600080fd5b6102a2838335602085016105b1565b600080600080600060a0868803121561065e57600080fd5b85356001600160401b038082111561067557600080fd5b61068189838a01610626565b9650602088013591508082111561069757600080fd5b6106a389838a01610626565b955060408801359150808211156106b957600080fd5b506106c688828901610626565b9598949750949560608101359550608001359392505050565b6000602082840312156106f157600080fd5b81356001600160401b0381111561070757600080fd5b8201601f8101841361071857600080fd5b6103a6848235602084016105b1565b60008060008060008060c0878903121561074057600080fd5b86356001600160401b038082111561075757600080fd5b6107638a838b01610626565b9750602089013591508082111561077957600080fd5b6107858a838b01610626565b9650604089013591508082111561079b57600080fd5b6107a78a838b01610626565b955060608901359150808211156107bd57600080fd5b506107ca89828a01610626565b9350506080870135915060a087013590509295509295509295565b6000806000606084860312156107fa57600080fd5b83356001600160401b038082111561081157600080fd5b61081d87838801610626565b9450602086013591508082111561083357600080fd5b5061084086828701610626565b925050604084013590509250925092565b6000815161086381856020860161052c565b9290920192915050565b602f60f81b81526000825161088981600185016020870161052c565b9190910160010192915050565b693d913730b6b2911d101160b11b815287516000906108bc81600a850160208d0161052c565b600160fd1b600a9184019182015288516108dd81600b840160208d0161052c565b88519101906108f381600b840160208c0161052c565b631116101160e11b600b929091019182018190526e3232b9b1b934b83a34b7b7111d101160891b600f830152875161093281601e850160208c0161052c565b601e9201918201526109ac61099d61099761098061097a610956602287018c610851565b770383937b832b93a34b2b9911d103d91373ab6b132b9111d160451b815260180190565b89610851565b6a1610113730b6b2911d101160a91b8152600b0190565b86610851565b62227d7d60e81b815260030190565b9a9950505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516109f281601d85016020870161052c565b91909101601d0192915050565b6834b6b0b3b2911d101160b91b81528451600090610a24816009850160208a0161052c565b8083019050633f69643d60e01b8060098301528651610a4a81600d850160208b0161052c565b741116101130b734b6b0ba34b7b72fbab936111d101160591b600d93909101928301528551610a80816022850160208a0161052c565b60229201918201528351610a9b81602684016020880161052c565b631116101160e11b60269290910191820152602a019695505050505050565b6834b6b0b3b2911d101160b91b81528251600090610adf81600985016020880161052c565b633f69643d60e01b6009918401918201528351610b0381600d84016020880161052c565b631116101160e11b600d9290910191820152601101949350505050565b7030b734b6b0ba34b7b72fbab936111d101160791b81528251600090610b4d81601185016020880161052c565b633f69643d60e01b6011918401918201528351610b7181601584016020880161052c565b631116101160e11b60159290910191820152601901949350505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610bb857610bb8610b8e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610be457610be4610bbf565b500490565b600082821015610bfb57610bfb610b8e565b500390565b600082610c0f57610c0f610bbf565b500690565b60008219821115610c2757610c27610b8e565b500190565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610c5c57610c5c610b8e565b50029056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122062c7b28aad966bf06d73637bb7797f4fb4b8baf84d8ec41cc8b200eaceb48b2f64736f6c63430008090033";

type SharedNFTLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharedNFTLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SharedNFTLogic__factory extends ContractFactory {
  constructor(...args: SharedNFTLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SharedNFTLogic> {
    return super.deploy(overrides || {}) as Promise<SharedNFTLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SharedNFTLogic {
    return super.attach(address) as SharedNFTLogic;
  }
  connect(signer: Signer): SharedNFTLogic__factory {
    return super.connect(signer) as SharedNFTLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharedNFTLogicInterface {
    return new utils.Interface(_abi) as SharedNFTLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SharedNFTLogic {
    return new Contract(address, _abi, signerOrProvider) as SharedNFTLogic;
  }
}
